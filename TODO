Long:
- Decouple variables and APs in BuchiAutomaton
- Try changing the encoding to multiple variables per character instead of multiple transitions per character

Medium:
- Maybe merge type inference and execution phases in pecan/lang/ir/prog.py
    - Somewhat more complicated than I originally thought because we have to move TypedIRLowering and Typed optimization into the evaluate loop
- Add new __repr__ functions that do a more standard repr (e.g., Class(field_1, field_2, ...)) that turn on with debug 2
- See if we can reduce the usage of the `type` function...
- Combine unification code for looking up dynamic calls and doing typechecking

Short:
- Move SpotFormula out of prog to keep the main program automata/library independent
- Make all parsing functions in pecan.lang.parser into proper functions (b/c it gives better debug info)
- Make settings log call a function so it desn't have to build all the strings if it's not going to display anyway
- Convert all operators to predicate calls after the last stage of optimizations
- Try projecting all at once instead of in multiple passes?

