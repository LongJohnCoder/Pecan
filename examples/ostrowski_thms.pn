#import("ostrowski_defs.pn")

#load("ostrowski/sturmian_word.txt", "pecan", $C(n))

Alias "Theorem" ==> Execute uncurry theoremCheck .

eventually_periodic(a, p) := @no_simplify[
    bco_valid(a,p) &
    exists z. bco_zero(z) & bco_lt(z, p) &
    exists n. bco_valid(a, n) &
    forall i, ip.
        (bco_adder(a,i,p,ip) & bco_valid(a,n) & bco_leq(n,i))
        =>
        $C[i] = $C[ip]
    ]
Theorem ("'Sturmian words are not eventually periodic'", {
    forall a, p. bco_valid(a, p) => !eventually_periodic(a, p)
}) .

Theorem ("'Sturmian words start with arbitrarily long squares'", {
    @no_simplify[
        forall a. bco_standard(a) =>
        forall n is ostrowski(a).
        exists m is ostrowski(a). m > n &
        forall j, jm. (bco_lt(j,m) & bco_adder(a,j,m,jm)) => $C[j] = $C[jm]
    ]
}) .

Theorem ("'All Sturmian words contain squares'", {
    @no_simplify[
        forall a. bco_standard(a) =>
        exists i, n are ostrowski(a). n > 0 &
        forall j. bco_lt(j,n) =>
            forall ij. bco_adder(a,i,j,ij) =>
            @simplify[forall ijn.
                bco_adder(a,ij,n,ijn) => $C[ij] = $C[ijn]]
    ]
}) .

